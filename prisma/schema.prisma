// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.text annotations in model Account below
    // Further reading: 
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model Example {
    id String @id @default(cuid())
}

// RollingStock table
model RollingStock {
    // Ids 
    id          String @id @default(cuid())
    identifier  String @unique

    livery      String

    builtYear   String
    depot       String

    // Class relationship
    classId String
    class Class @relation(fields: [classId], references: [id])

    // Formation stuff
    formation   String
    carCount    Int

    sightings   Sighting[]
 
    // Operator relationship
    operator    OperatingCompany @relation(fields: [operatorId], references: [id])
    operatorId  String
}

// Operating Company table
model OperatingCompany {
    id          String @id @default(cuid())
    name        String 
    code        String @unique
    logoUrl     String
    rStock      RollingStock[]
    operatorSets OperatorSet[]
}

// Sighting table
model Sighting {
    id          String @id @default(cuid())
    location    String
    date        DateTime
    rstock      RollingStock @relation(fields: [rstockId], references: [id])
    rstockId    String
    userId      String
}

model Class {
    id          String @id @default(cuid())
    no          String @unique
    type        String
    model       String

    manufacturer Manufacturer @relation(fields: [manufacturerId], references: [id])
    manufacturerId String

    operatorSets OperatorSet[]
    rollingStock RollingStock[]
}

model Manufacturer {
    id         String @id @default(cuid())
    name       String
    logoUrl    String
    wikiPedia  String

    classes    Class[]
}

model OperatorSet {
    id         String @id @default(cuid())
    graphicUrl String
    operator   OperatingCompany @relation(fields: [operatorId], references: [id])
    operatorId String 
    class      Class @relation(fields: [classId], references: [id])
    classId    String
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? //@db.Text
    access_token      String? //@db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? //@db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
